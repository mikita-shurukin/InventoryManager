@model InventoryManager.Models.Requests.Warehouse.AddItemRequest

<h1>Add Items to Warehouse</h1>

<form id="addItemsForm">
    <div class="form-group">
        <label for="warehouseId">Warehouse ID:</label>
        <input type="number" class="form-control" id="warehouseId" name="warehouseId" value="@Model.WarehouseId" readonly>
    </div>
    @foreach (var itemPosition in Model.ItemPositions)
    {
        <div class="form-group">
            <label for="itemId">Item ID:</label>
            <input type="number" class="form-control" id="itemId" name="itemId" value="@itemPosition.ItemId" readonly>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity:</label>
            <input type="number" class="form-control" id="quantity" name="quantity" value="@itemPosition.Quantity" readonly>
        </div>
        <div class="form-group">
            <label for="unitOfMeasurement">Unit of Measurement:</label>
            <input type="text" class="form-control" id="unitOfMeasurement" name="unitOfMeasurement" value="@itemPosition.UnitOfMeasurement" readonly>
        </div>
    }
    <button type="submit" class="btn btn-primary">Add Items</button>
</form>

@section scripts {
    <script>
        document.getElementById("addItemsForm").addEventListener("submit", function (event) {
            event.preventDefault();

            var formData = {
                warehouseId: document.getElementById("warehouseId").value,
                itemPositions: []
            };

            // Collect item positions
            var itemPositionInputs = document.querySelectorAll("div.form-group");
            itemPositionInputs.forEach(function (input) {
                var itemId = input.querySelector("input[name='itemId']").value;
                var quantity = input.querySelector("input[name='quantity']").value;
                var unitOfMeasurement = input.querySelector("input[name='unitOfMeasurement']").value;
                formData.itemPositions.push({
                    itemId: itemId,
                    quantity: quantity,
                    unitOfMeasurement: unitOfMeasurement
                });
            });

            fetch("/api/Warehouses/AddItems", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(formData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    alert("Items added successfully");
                })
                .catch(error => {
                    console.error("There was an error!", error);
                    alert("Error adding items");
                });
        });
    </script>
}
